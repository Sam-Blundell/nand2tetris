// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=R0, b=R1, c=R2, d=R3, e=R4, f=R5, g=R6, h=R7);
    RAM8(in=in, load=R0, address=address[0..2], out=R0o);
    RAM8(in=in, load=R1, address=address[0..2], out=R1o);
    RAM8(in=in, load=R2, address=address[0..2], out=R2o);
    RAM8(in=in, load=R3, address=address[0..2], out=R3o);
    RAM8(in=in, load=R4, address=address[0..2], out=R4o);
    RAM8(in=in, load=R5, address=address[0..2], out=R5o);
    RAM8(in=in, load=R6, address=address[0..2], out=R6o);
    RAM8(in=in, load=R7, address=address[0..2], out=R7o);
    Mux8Way16(a=R0o, b=R1o, c=R2o, d=R3o, e=R4o, f=R5o, g=R6o, h=R7o, sel=address[3..5], out=out);
}